
name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  industrial_ci:
      name: ROS ${{ matrix.ROS_DISTRO }} (${{ matrix.ROS_REPO }})
      runs-on: ubuntu-latest
      strategy:
        matrix: 
          ROS_DISTRO: [noetic]
          ROS_REPO:   [main]
          CMAKE_ARGS: [-DCMAKE_EXPORT_COMPILE_COMMANDS=1]
          include: 
            - {ROS_DISTRO: noetic, ROS_REPO: main}
      env:
        CCACHE_DIR: "${{ github.workspace }}/.ccache" 
        SONAR_SCANNER_VERSION: 4.4.0.2170
        SONAR_SERVER_URL: "https://sonarcloud.io"
        BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
      steps:
        - uses: actions/checkout@v2 
        - uses: actions/cache@v2 
          with:
            path: ${{ env.CCACHE_DIR }}
            key: ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-${{github.run_id}}
            restore-keys: |
              ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-
        - uses: 'ros-industrial/industrial_ci@master' 
          env: 
            ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
            ROS_REPO: ${{ matrix.ROS_REPO }}
            CMAKE_ARGS: -DCMAKE_EXPORT_COMPILE_COMMANDS=1
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11
        - name: Download and set up sonar-scanner
          env:
            SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
          run: |
            mkdir -p $HOME/.sonar
            curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
        - name: Download and set up build-wrapper
          env:
            BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
          run: |
            curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
            unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
            echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
        - name: Run build-wrapper
          run: |
            pwd
            # ls /root/target_ws/build
            build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build /root/target_ws/build/
        - name: Run sonar-scanner
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

        

  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   env:
  #     SONAR_SCANNER_VERSION: 4.4.0.2170
  #     SONAR_SERVER_URL: "https://sonarcloud.io"
  #     BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
  #   steps:
  #     # - uses: actions/checkout@v2
  #     #   with:
  #     #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 11
  #     - name: Download and set up sonar-scanner
  #       env:
  #         SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
  #       run: |
  #         mkdir -p $HOME/.sonar
  #         curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
  #         unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
  #         echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
  #     - name: Download and set up build-wrapper
  #       env:
  #         BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
  #       run: |
  #         curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
  #         unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
  #         echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
  #     - name: Run build-wrapper
  #       run: |
  #         build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} catkin clean
  #     - name: Run sonar-scanner
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: |
  #         sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
